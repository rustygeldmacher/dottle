#!/bin/bash

# For first-time installation, DOTTLE_HOME is not initialized
if [ "$DOTTLE_HOME" = "" ]; then
  echo DOTTLE_HOME is not set
  echo If this is your first time running, run dottle-init like this:
  echo DOTTLE_HOME=/path/to/dottle dottle-init
  exit 1
fi

# Creates a symlink to the file
# Arguments:
# $1 => source file
# $2 => destination file
# Lots of quoting below to handle paths with spaces in them
# TODO: Warn/backup on overwriting non-symlinked destination file
function link_file {
  local source_file=$1
  local destination_file=$2
  local destination_dir=`dirname "$2"`
  if [ ! -d "$destination_dir" ]; then
    mkdir -p "$destination_dir"
  fi
  if [ -e "$destination_file" -o -L "$destination_file" ]; then
    # TODO: Back it up instead?
    rm -f "$destination_file"
  fi
  ln -s "$source_file" "$destination_file"
}

# TODO: check for prereqs (find)

if [ "$1" != "" ]; then
  echo "Only initializing topic: $1"
  topics=$1
else
  topics=$(dottle-topics)
fi

for topic in $topics
do
  echo "Installing topic $topic..."
  topic_dir="$DOTTLE_HOME/topics/$topic"
  symlink_files=`cd $topic_dir && find . -name "*.symlink" 2> /dev/null`
  for file in $symlink_files
  do
    source_file="$topic_dir/$(echo $file | sed -e 's/^\.\///')"
    destination_file=`echo $file | sed -e 's/\.symlink$//' | sed -e 's/^\.\///' | sed -e 's/^_//'`
    destination_file="$HOME/.$destination_file"
    link_file $source_file $destination_file
  done

  install_script="$DOTTLE_HOME/topics/$topic/install"
  if [ -f  $install_script ]; then
    TOPIC_PATH=$topic_dir $install_script
  fi
done

